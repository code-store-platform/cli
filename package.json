{
  "name": "codestore",
  "description": "code.store CLI. Add services, deploy, debug, perform all operations from your terminal.",
  "version": "1.4.5",
  "bin": {
    "codestore": "./bin/run",
    "cs": "./bin/run"
  },
  "homepage": "https://github.com/code-store-platform/cli",
  "keywords": [
    "codestore",
    "cli",
    "command line interface",
    "reuse"
  ],
  "author": "code.store",
  "license": "MIT",
  "bugs": "https://github.com/code-store-platform/cli/issues",
  "dependencies": {
    "@graphql-schema/validate-schema": "^1.0.1",
    "@oclif/command": "^1.5.19",
    "@oclif/config": "^1.14.0",
    "@oclif/plugin-help": "^2.2.3",
    "@types/archiver": "^3.1.0",
    "@types/axios": "^0.14.0",
    "@types/express": "^4.17.3",
    "@types/inquirer": "^6.5.0",
    "@types/jest": "^25.2.1",
    "apollo-boost": "^0.4.7",
    "archiver-promise": "^1.0.0",
    "axios": "^0.19.2",
    "chalk": "^3.0.0",
    "clear": "^0.1.0",
    "cli-ux": "^5.4.5",
    "completion": "^1.0.1",
    "cross-fetch": "^3.0.4",
    "enquirer": "^2.3.5",
    "express": "^4.17.1",
    "graphql": "^14.6.0",
    "inquirer": "^7.1.0",
    "jest": "^25.2.7",
    "listr2": "^2.0.1",
    "node-config-ts": "^3.0.4",
    "open": "^7.0.3",
    "ora": "^4.0.3",
    "os": "^0.1.1",
    "rimraf": "^3.0.2",
    "tabtab": "^3.0.2",
    "tree-node-cli": "^1.3.0",
    "ts-jest": "^25.3.1",
    "unzipper": "^0.10.11",
    "yaml": "^1.10.0",
    "zip-a-folder": "0.0.12"
  },
  "devDependencies": {
    "@oclif/dev-cli": "^1.22.2",
    "@types/node": "^10.17.17",
    "@typescript-eslint/eslint-plugin": "^2.22.0",
    "@typescript-eslint/parser": "^2.26.0",
    "aws-sdk": "^2.706.0",
    "eslint": "^6.8.0",
    "eslint-config-airbnb-typescript": "^7.0.0",
    "eslint-plugin-import": "^2.20.1",
    "globby": "^10.0.2",
    "jest-runner-eslint": "^0.7.6",
    "nyc": "^14.1.1",
    "ts-node": "^8.6.2",
    "tsconfig-paths": "^3.9.0",
    "typescript": "^3.8.3"
  },
  "engines": {
    "node": ">=8.0.0"
  },
  "files": [
    "/bin",
    "/lib",
    "/npm-shrinkwrap.json",
    "/oclif.manifest.json"
  ],
  "oclif": {
    "update": {
      "s3": {
        "bucket": "s3.code.store"
      }
    },
    "commands": "./lib/commands",
    "bin": "codestore",
    "plugins": [
      "@oclif/plugin-help"
    ],
    "topics": {
      "context": {
        "description": "Manage global Project and Service contexts"
      },
      "auth": {
        "description": "Authentication commands, login, logout, whoami"
      },
      "project": {
        "description": "ðŸš§ A project is a particular app or website, where you can (re)use your existing services. It might be your e-commerce project or a logistics mobile application or business web-app. Each time you add a service to a project, we create a separate, isolated instance of your service. Each service reused in a project has its own environments, databases, logs, and billing"
      },
      "project:service": {
        "description": "Manage services inside your project"
      },
      "service": {
        "description": "Manage your services"
      },
      "help": {
        "description": "Display help for codestore command"
      }
    }
  },
  "repository": "code-store-platform/cli",
  "scripts": {
    "postpack": "rm -f oclif.manifest.json",
    "prepack": "rm -rf lib && tsc -b && oclif-dev manifest && oclif-dev readme",
    "test": "jest --coverage --runInBand --detectOpenHandles",
    "start": "node ./bin/run",
    "lint": "eslint '{src,apps,libs,test}/**/*.ts' --fix"
  },
  "types": "lib/index.d.ts",
  "jest": {
    "projects": [
      {
        "displayName": "lint",
        "runner": "jest-runner-eslint",
        "testMatch": [
          "<rootDir>/src/**/*.ts"
        ],
        "rootDir": "src"
      },
      {
        "displayName": "test",
        "moduleFileExtensions": [
          "js",
          "json",
          "ts"
        ],
        "rootDir": "src",
        "testRegex": ".spec.ts$",
        "transform": {
          "^.+\\.ts$": "ts-jest"
        },
        "coverageDirectory": "../coverage",
        "collectCoverage": true,
        "coveragePathIgnorePatterns": [
          "/node_modules/",
          "/dist/",
          ".dto.ts$"
        ],
        "testEnvironment": "node"
      }
    ]
  }
}
